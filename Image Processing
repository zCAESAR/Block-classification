import numpy as np
import cv2

local = dict(san = [0,0],si = [0,0],yuan = [0,0])
#local['san']=[20,10]
#print(local['san'])
global contours 

def buhuo():
	cap = cv2.VideoCapture(0)
	ret,img = cap.read()
	gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
	#滤波处理：
	gray = cv2.bilateralFilter(gray, 11, 17, 17)
	ret,thresh = cv2.threshold(gray,75,255,1)
	image,contours,h = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
	cap.release()
	
def findsan():
	buhuo()
	for cnt in contours:
		approx = cv2.approxPolyDP(cnt,0.02*cv2.arcLength(cnt,True),True)
		#print(len(approx))
		# if len(approx)==5:
			# print("pentagon")
			# img = cv2.drawContours(img,[cnt],0,255,-1)
		#if len(approx)==3:
		print(approx)
			# print("triangle")
			# img = cv2.drawContours(img,[cnt],0,(255,0,0),-1)
def findsi():

def findyuan():
	
while(1):
	ret,img = cap.read()
	gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
	#滤波处理：
	gray = cv2.bilateralFilter(gray, 11, 17, 17)
	ret,thresh = cv2.threshold(gray,75,255,1)
	image,contours,h = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
	for cnt in contours:
		approx = cv2.approxPolyDP(cnt,0.02*cv2.arcLength(cnt,True),True)
		print(len(approx))
		# if len(approx)==5:
			# print("pentagon")
			# img = cv2.drawContours(img,[cnt],0,255,-1)
		if len(approx)==3:
			print("triangle")
			img = cv2.drawContours(img,[cnt],0,(255,0,0),-1)
		elif len(approx)==4:
			print("square")
			img = cv2.drawContours(img,[cnt],0,(0,255,0),-1)
		# elif len(approx) == 9:
			# print("half-circle")
			# img = cv2.drawContours(img,[cnt],0,(255,255,0),-1)
		# elif len(approx) > 15:
			# print("circle")
			# img = cv2.drawContours(img,[cnt],0,(0,0,255),-1)	
	if cv2.waitKey(50)&0xFF == 27:
		break
	cv2.imshow('img',img)
	cv2.imshow('gray',thresh)
